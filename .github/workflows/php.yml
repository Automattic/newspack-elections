name: PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Cache NPM packages
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-php-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-js-
      
    - name: Install NPM Dependencies
      run: |
        npm install
    
    - name: Build NPM Dependencies
      run: |
        npm run build
    
    - name: Zip It Up
      run: |
        zip -r "${GITHUB_WORKSPACE}/release.zip" .

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${GITHUB_WORKSPACE}/release.zip
        asset_name: release.zip
        asset_content_type: application/zip

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
