name: PHP Composer

on:
  push:
    tags:
      - "v*.*.*"
      
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Cache NPM packages
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-php-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-js-
      
    - name: Install NPM Dependencies
      run: |
        npm install
    
    - name: Build NPM Dependencies
      run: |
        npm run build
    
    - name: Zip It Up
      run: |
        zip -r "${GITHUB_WORKSPACE}/release.zip" .

    #- name: Create Release
    #  id: create_release
    #  uses: elgohr/Github-Release-Action@v4
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    #  with:
    #    title: Messgae?


    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}-CHANGELOG.txt
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        token: ${{ secrets.RELEASE_TOKEN }}
        files: "release.zip"
      env: 
        GITHUB_REPOSITORY: "govpack-wp/govpack-plugin"


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
